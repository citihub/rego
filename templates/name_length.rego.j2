package main

name_length(resource_type, length_limit, field_name, default_field_name) = violations {

    resources := [ resource |
        resource := input.resource_changes[_]
        resource.type == resource_type
    ]

    violations := [object.get(rg.change.after, field_name, object.get(rg.change.after, default_field_name, null)) |
        rg := resources[_];
        not is_null(rg.change.after);
        count(object.get(rg.change.after, field_name, object.get(rg.change.after, default_field_name, null))) > length_limit
    ]
}

{% block name_length %}
{% for item in name_length_limits %}
# Validate {{item.terraform_resource_name}} name length
deny[msg] {
    violations := name_length("{{item.terraform_resource_name}}", {{item.max_length}}, "{{item.terraform_field_name or 'name'}}", "name")
    count(violations) > 0
    msg = sprintf("{{item.terraform_resource_name}} limit is {{item.max_length}} characters, found %v violation(s) (%v)", [count(violations), concat(",", violations)])
}
{% endfor %}
{% endblock %}